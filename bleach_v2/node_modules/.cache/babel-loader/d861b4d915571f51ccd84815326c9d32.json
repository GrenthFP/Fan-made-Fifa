{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aldui\\\\OneDrive\\\\Desktop\\\\Soul Arena\\\\react\\\\bleach_v2\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./character_database.js\";\nimport character_database from \"./character_database.js\";\nlet selected_characters = [1];\n\nfunction App() {\n  //is character targetable state\n  const [targetable, set_targetable] = useState([0, 0]); //target class state\n\n  const [targeted_character, set_targeted_character] = useState(\"Hollow_slayer.jpg\"); //HP bars\n\n  const [hp_ally_char_1, set_ally_hp_char_1] = useState(100);\n  const [hp_enemy_char_1, set_enemy_hp_char_1] = useState(100); //Image setter for char one\n\n  let character_one = character_database.find(element => element.id == selected_characters[0]); //character one getter\n\n  const [character_one_state, set_character_one_state] = useState(character_one); //enemy that will take the damage\n\n  const [targeted_enemy_final, set_targeted_enemy_final] = useState(); //skill to be used setter\n\n  const [skill_used_character_one, set_skill_used_character_one] = useState([]); //targeting function\n\n  const Targeting = (character, target, attack_stats) => {\n    if (target == \"Enemy\") {\n      set_targeted_character(\"Zangetsu_defense.jpg\");\n      set_targetable([0, 1]);\n\n      if (attack_stats == 1) {\n        set_skill_used_character_one([character_one_state.ability_one_damage]);\n      }\n\n      if (attack_stats == 2) {\n        set_skill_used_character_one([character_one_state.ability_two_damage]);\n      }\n\n      if (attack_stats == 3) {\n        set_skill_used_character_one([character_one_state.ability_three_damage]);\n      }\n\n      if (attack_stats == 4) {\n        set_skill_used_character_one([character_one_state.ability_four_damage]);\n      }\n    }\n  }; //enemy choosing function\n\n\n  const Choose_Target = targeted_enemy => {\n    if (targetable[1] == 1) {\n      set_targeted_enemy_final(targeted_enemy);\n      set_targeted_character(\"Hollow_slayer.jpg\");\n    }\n  }; //end turn function\n\n\n  const End_turn = () => {\n    console.log(targeted_enemy_final);\n\n    if (targeted_enemy_final == 1) {\n      set_enemy_hp_char_1(hp_enemy_char_1 - skill_used_character_one);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Ally:\", hp_ally_char_1), React.createElement(\"img\", {\n    src: character_one.ability_one_image,\n    onClick: () => Targeting(0, character_one_state.ability_one_target, 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: character_one.ability_two_image,\n    onClick: () => Targeting(0, 2),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: character_one.ability_three_image,\n    onClick: () => Targeting(0, 3),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: character_one.ability_four_image,\n    onClick: () => Targeting(0, 4),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Enemy:\", hp_enemy_char_1), React.createElement(\"img\", {\n    src: targeted_character,\n    onClick: () => Choose_Target(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: End_turn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"End Turn\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aldui/OneDrive/Desktop/Soul Arena/react/bleach_v2/src/App.js"],"names":["React","useState","character_database","selected_characters","App","targetable","set_targetable","targeted_character","set_targeted_character","hp_ally_char_1","set_ally_hp_char_1","hp_enemy_char_1","set_enemy_hp_char_1","character_one","find","element","id","character_one_state","set_character_one_state","targeted_enemy_final","set_targeted_enemy_final","skill_used_character_one","set_skill_used_character_one","Targeting","character","target","attack_stats","ability_one_damage","ability_two_damage","ability_three_damage","ability_four_damage","Choose_Target","targeted_enemy","End_turn","console","log","ability_one_image","ability_one_target","ability_two_image","ability_three_image","ability_four_image"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./character_database.js\";\nimport character_database from \"./character_database.js\";\n\nlet selected_characters = [1];\n\nfunction App() {\n  //is character targetable state\n  const [targetable, set_targetable] = useState([0, 0]);\n\n  //target class state\n  const [targeted_character, set_targeted_character] = useState(\n    \"Hollow_slayer.jpg\"\n  );\n\n  //HP bars\n  const [hp_ally_char_1, set_ally_hp_char_1] = useState(100);\n  const [hp_enemy_char_1, set_enemy_hp_char_1] = useState(100);\n  //Image setter for char one\n  let character_one = character_database.find(\n    element => element.id == selected_characters[0]\n  );\n  //character one getter\n  const [character_one_state, set_character_one_state] = useState(\n    character_one\n  );\n\n  //enemy that will take the damage\n  const [targeted_enemy_final, set_targeted_enemy_final] = useState();\n  //skill to be used setter\n  const [skill_used_character_one, set_skill_used_character_one] = useState([]);\n\n  //targeting function\n  const Targeting = (character, target, attack_stats) => {\n    if (target == \"Enemy\") {\n      set_targeted_character(\"Zangetsu_defense.jpg\");\n      set_targetable([0, 1]);\n      if (attack_stats == 1) {\n        set_skill_used_character_one([character_one_state.ability_one_damage]);\n      }\n      if (attack_stats == 2) {\n        set_skill_used_character_one([character_one_state.ability_two_damage]);\n      }\n      if (attack_stats == 3) {\n        set_skill_used_character_one([\n          character_one_state.ability_three_damage\n        ]);\n      }\n      if (attack_stats == 4) {\n        set_skill_used_character_one([character_one_state.ability_four_damage]);\n      }\n    }\n  };\n  //enemy choosing function\n  const Choose_Target = targeted_enemy => {\n    if (targetable[1] == 1) {\n      set_targeted_enemy_final(targeted_enemy);\n      set_targeted_character(\"Hollow_slayer.jpg\");\n    }\n  };\n\n  //end turn function\n  const End_turn = () => {\n    console.log(targeted_enemy_final);\n    if (targeted_enemy_final == 1) {\n      set_enemy_hp_char_1(hp_enemy_char_1 - skill_used_character_one);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <label>Ally:{hp_ally_char_1}</label>\n      <img\n        src={character_one.ability_one_image}\n        onClick={() => Targeting(0, character_one_state.ability_one_target, 1)}\n      ></img>\n      <img\n        src={character_one.ability_two_image}\n        onClick={() => Targeting(0, 2)}\n      ></img>\n      <img\n        src={character_one.ability_three_image}\n        onClick={() => Targeting(0, 3)}\n      ></img>\n      <img\n        src={character_one.ability_four_image}\n        onClick={() => Targeting(0, 4)}\n      ></img>\n      <label>Enemy:{hp_enemy_char_1}</label>\n      <img src={targeted_character} onClick={() => Choose_Target(0)}></img>\n      <button onClick={End_turn}>End Turn</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}